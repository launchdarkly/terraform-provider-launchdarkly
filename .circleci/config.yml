# Golang CircleCI 2.1 configuration file for terraform-provider-launchdarkly-private tests
version: 2.1

orbs:
  go: circleci/go@1.7.0
  linter: talkiq/linter@3.2.0
  slack: circleci/slack@4.7.1

commands:
  notify-slack-of-failures:
    parameters:
      branch_pattern:
        type: string
        default: main
    steps:
      - slack/notify:
          branch_pattern: <<parameters.branch_pattern>>
          channel: CLR408M4Y #proj-terraform
          event: fail
          custom: |
            {"text":"A terraform provider test failed","blocks":[{"type":"section",
            "text":{"type":"mrkdwn","text":":terraform-on-fire: A terraform provider *${CIRCLE_JOB}* job failed"}},
            {"type":"context","elements":[{"type":"mrkdwn","text":"branch: _${CIRCLE_BRANCH}_"}]},{"type":"actions","elements":
            [{"type":"button","text":{"type":"plain_text","text":"View job"},"url":"${CIRCLE_BUILD_URL}"}]}]}

jobs:
  test:
    executor:
      name: go/default
      tag: &go_version "1.19.3"

    environment:
      # sc-146360 - overrides the default timeout of 3000ms when reaching checkpoint-api.hashicorp.com
      CHECKPOINT_TIMEOUT: 15000

    steps:
      - checkout
      - go/mod-download-cached
      - run:
          name: Run unit tests
          command: TESTARGS="-v" make test
      - run:
          name: Test Data Sources
          command: TESTARGS="-run TestAccDataSource" make testacc-with-retry
      - run:
          name: Test Access Token Resource
          command: TESTARGS="-run TestAccAccessToken" make testacc-with-retry
      - run:
          name: Test Audit Log Subscription Resource
          command: TESTARGS="-run TestAccAuditLogSubscription" make testacc-with-retry
      - run:
          name: Test Custom Role Resource
          command: TESTARGS="-run TestAccCustomRole" make testacc-with-retry
      - run:
          name: Test Destination Resource
          command: TESTARGS="-run TestAccDestination" make testacc-with-retry
      - run:
          name: Test Environment Resource
          command: TESTARGS="-run TestAccEnvironment" make testacc-with-retry
      - run:
          name: Test Feature Flag Resource
          command: TESTARGS="-run TestAccFeatureFlag_" make testacc-with-retry
      - run:
          name: Test Feature Flag Environment Resource
          command: TESTARGS="-run TestAccFeatureFlagEnvironment" make testacc-with-retry
      - run:
          name: Test Flag Trigger Resource
          command: TESTARGS="-run TestAccFlagTrigger" make testacc-with-retry
      - run:
          name: Test Metric Resource
          command: TESTARGS="-run TestAccMetric" make testacc-with-retry
      - run:
          name: Test Project Resource
          command: TESTARGS="-run TestAccProject" make testacc-with-retry
      - run:
          name: Test Relay Proxy Configuration Resource
          command: TESTARGS="-run TestAccRelayProxy" make testacc-with-retry
      - run:
          name: Test Segment Resource
          command: TESTARGS="-run TestAccSegment" make testacc-with-retry
      - run:
          name: Test Team Members
          command: |
            TESTARGS="-run TestAccTeamMember_CreateGeneric" make testacc-with-retry
            TESTARGS="-run TestAccTeamMember_UpdateGeneric" make testacc-with-retry
            TESTARGS="-run TestAccTeamMember_CreateWithCustomRole" make testacc-with-retry
            TESTARGS="-run TestAccTeamMember_UpdateWithCustomRole" make testacc-with-retry
      - run:
          name: Test Team Resource
          command: TESTARGS="-run TestAccTeam_" make testacc-with-retry
      - run:
          name: Test Team Role Mapping Resource
          command: TESTARGS="-run TestAccTeamRoleMapping_" make testacc-with-retry
      - run:
          name: Test Webhook Resource
          command: TESTARGS="-run TestAccWebhook" make testacc-with-retry
      - notify-slack-of-failures

  lint:
    executor:
      name: go/default
      tag: *go_version

    steps:
      - checkout
      - go/mod-download-cached
      - run:
          name: Install python
          command: |
            sudo apt update
            sudo apt install python3-pip python-is-python3
      - linter/pre-commit
      - notify-slack-of-failures

workflows:
  main:
    jobs:
      - test:
          context: slack-orb
      - lint:
          context: slack-orb

  daily:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test:
          context: slack-orb
      - lint:
          context: slack-orb
